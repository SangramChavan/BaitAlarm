package com.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.w3c.css.sac.InputSource;
import org.w3c.dom.css.CSSRule;
import org.w3c.dom.css.CSSRuleList;
import org.w3c.dom.css.CSSStyleDeclaration;
import org.w3c.dom.css.CSSStyleRule;
import org.w3c.dom.css.CSSStyleSheet;

import com.steadystate.css.parser.CSSOMParser;

public class CSSParserDemo {
	public static void main(String[] args) {
		loadCSSStyle("D:\\work\\project\\EarlyDisaster\\DisasterWarningWeb\\WebContent\\theme\\looks.css");
	}
	public static void loadCSSStyle(String filePath) {
		try {
			InputStream stream = new FileInputStream(new File(filePath));
			// wrap as an InputSource
			InputSource source = new InputSource(new InputStreamReader(stream));

			// instantiate a parser
			CSSOMParser parser = new CSSOMParser();
			CSSStyleSheet stylesheet = parser.parseStyleSheet(source, null,
					null);

			CSSRuleList ruleList = stylesheet.getCssRules();
			for (int i = 0; i < ruleList.getLength(); i++) {
				CSSRule rule = ruleList.item(i);

				if (rule instanceof CSSStyleRule) {

					CSSStyleRule styleRule = (CSSStyleRule) rule;
					System.out.println("selector: "+ styleRule.getSelectorText());
					CSSStyleDeclaration styleDeclaration = styleRule.getStyle();
					for (int j = 0; j < styleDeclaration.getLength(); j++) {
						String property = styleDeclaration.item(j);
						System.out.println("property: " + property);
						System.out.println("value: "+ styleDeclaration.getPropertyCSSValue(property).getCssText());
					}
				}
			}
		} catch (Exception t) {
			t.printStackTrace();
		}
	}
	public static void showCSSStyle(String filePath) {
		try {
			InputStream stream = new FileInputStream(new File(filePath));
			// wrap as an InputSource
			InputSource source = new InputSource(new InputStreamReader(stream));

			// instantiate a parser
			CSSOMParser parser = new CSSOMParser();
			CSSStyleSheet stylesheet = parser.parseStyleSheet(source, null,
					null);

			CSSRuleList ruleList = stylesheet.getCssRules();
			for (int i = 0; i < ruleList.getLength(); i++) {
				CSSRule rule = ruleList.item(i);

				if (rule instanceof CSSStyleRule) {

					CSSStyleRule styleRule = (CSSStyleRule) rule;

					System.out.println("selector: "
							+ styleRule.getSelectorText());

					CSSStyleDeclaration styleDeclaration = styleRule.getStyle();
					
					for (int j = 0; j < styleDeclaration.getLength(); j++) {

						String property = styleDeclaration.item(j);

						System.out.println("property: " + property);

						System.out.println("value: "
								+ styleDeclaration
										.getPropertyCSSValue(property)
										.getCssText());

					}
				}
			}
		} catch (Exception t) {
			t.printStackTrace();
		}
	}
}
